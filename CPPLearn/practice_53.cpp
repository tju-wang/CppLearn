#include <iostream>
using namespace std;

/*
题目：允许对二进制数进行两种操作：00->10,10->01，求可能的最大数(两种操作可以进行任意次)
输入格式：先一行输出样例数，然后每两行输入二进制长度与二进制数本体，1<=长度<=10000
例如：
2
4
0001
10
1010111000
输出格式：每行输出每个样例的答案
例如
1101
1111101111

思路：操作：①00->10②10->01,

为了使得到的数最大，尽可能使高位为1，那么②其实是为①服务的，利用②将0往高位移动，将1往低位移动，
然后将高位的0利用①转换，通过模拟可以得到结论：第一个0后面的所有1（设个数为a）都会别挪到最后（通过②），
此时经过①会有新的0101情况出现，继续重复上述步骤，最后得到：（总长度-a-1）个1+0+a个1 的字符串

总结思路：
（1）通过②将第一个0后面的所有1移到最后
（2）通过①处理此时的字符串
（3）重复(1)(2)直到不能进行①②操作
版权声明：本文为CSDN博主「JingleLiA」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/JingleLiA/article/details/105498829
*/

